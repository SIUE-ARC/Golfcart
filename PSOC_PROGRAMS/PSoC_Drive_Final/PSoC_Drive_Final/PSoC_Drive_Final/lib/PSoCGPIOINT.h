/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// OpEncB address and mask defines
#pragma	ioport	OpEncB_Data_ADDR:	0x4
BYTE			OpEncB_Data_ADDR;
#pragma	ioport	OpEncB_DriveMode_0_ADDR:	0x104
BYTE			OpEncB_DriveMode_0_ADDR;
#pragma	ioport	OpEncB_DriveMode_1_ADDR:	0x105
BYTE			OpEncB_DriveMode_1_ADDR;
#pragma	ioport	OpEncB_DriveMode_2_ADDR:	0x7
BYTE			OpEncB_DriveMode_2_ADDR;
#pragma	ioport	OpEncB_GlobalSelect_ADDR:	0x6
BYTE			OpEncB_GlobalSelect_ADDR;
#pragma	ioport	OpEncB_IntCtrl_0_ADDR:	0x106
BYTE			OpEncB_IntCtrl_0_ADDR;
#pragma	ioport	OpEncB_IntCtrl_1_ADDR:	0x107
BYTE			OpEncB_IntCtrl_1_ADDR;
#pragma	ioport	OpEncB_IntEn_ADDR:	0x5
BYTE			OpEncB_IntEn_ADDR;
#define OpEncB_MASK 0x20
// OpEncA address and mask defines
#pragma	ioport	OpEncA_Data_ADDR:	0x4
BYTE			OpEncA_Data_ADDR;
#pragma	ioport	OpEncA_DriveMode_0_ADDR:	0x104
BYTE			OpEncA_DriveMode_0_ADDR;
#pragma	ioport	OpEncA_DriveMode_1_ADDR:	0x105
BYTE			OpEncA_DriveMode_1_ADDR;
#pragma	ioport	OpEncA_DriveMode_2_ADDR:	0x7
BYTE			OpEncA_DriveMode_2_ADDR;
#pragma	ioport	OpEncA_GlobalSelect_ADDR:	0x6
BYTE			OpEncA_GlobalSelect_ADDR;
#pragma	ioport	OpEncA_IntCtrl_0_ADDR:	0x106
BYTE			OpEncA_IntCtrl_0_ADDR;
#pragma	ioport	OpEncA_IntCtrl_1_ADDR:	0x107
BYTE			OpEncA_IntCtrl_1_ADDR;
#pragma	ioport	OpEncA_IntEn_ADDR:	0x5
BYTE			OpEncA_IntEn_ADDR;
#define OpEncA_MASK 0x10
// AnalogOutBuf_0 address and mask defines
#pragma	ioport	AnalogOutBuf_0_Data_ADDR:	0x0
BYTE			AnalogOutBuf_0_Data_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_0_ADDR:	0x100
BYTE			AnalogOutBuf_0_DriveMode_0_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_1_ADDR:	0x101
BYTE			AnalogOutBuf_0_DriveMode_1_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_2_ADDR:	0x3
BYTE			AnalogOutBuf_0_DriveMode_2_ADDR;
#pragma	ioport	AnalogOutBuf_0_GlobalSelect_ADDR:	0x2
BYTE			AnalogOutBuf_0_GlobalSelect_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntCtrl_0_ADDR:	0x102
BYTE			AnalogOutBuf_0_IntCtrl_0_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntCtrl_1_ADDR:	0x103
BYTE			AnalogOutBuf_0_IntCtrl_1_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntEn_ADDR:	0x1
BYTE			AnalogOutBuf_0_IntEn_ADDR;
#define AnalogOutBuf_0_MASK 0x8
// F_or_R address and mask defines
#pragma	ioport	F_or_R_Data_ADDR:	0x4
BYTE			F_or_R_Data_ADDR;
#pragma	ioport	F_or_R_DriveMode_0_ADDR:	0x104
BYTE			F_or_R_DriveMode_0_ADDR;
#pragma	ioport	F_or_R_DriveMode_1_ADDR:	0x105
BYTE			F_or_R_DriveMode_1_ADDR;
#pragma	ioport	F_or_R_DriveMode_2_ADDR:	0x7
BYTE			F_or_R_DriveMode_2_ADDR;
#pragma	ioport	F_or_R_GlobalSelect_ADDR:	0x6
BYTE			F_or_R_GlobalSelect_ADDR;
#pragma	ioport	F_or_R_IntCtrl_0_ADDR:	0x106
BYTE			F_or_R_IntCtrl_0_ADDR;
#pragma	ioport	F_or_R_IntCtrl_1_ADDR:	0x107
BYTE			F_or_R_IntCtrl_1_ADDR;
#pragma	ioport	F_or_R_IntEn_ADDR:	0x5
BYTE			F_or_R_IntEn_ADDR;
#define F_or_R_MASK 0x4
// Autonomous_Toggle address and mask defines
#pragma	ioport	Autonomous_Toggle_Data_ADDR:	0x4
BYTE			Autonomous_Toggle_Data_ADDR;
#pragma	ioport	Autonomous_Toggle_DriveMode_0_ADDR:	0x104
BYTE			Autonomous_Toggle_DriveMode_0_ADDR;
#pragma	ioport	Autonomous_Toggle_DriveMode_1_ADDR:	0x105
BYTE			Autonomous_Toggle_DriveMode_1_ADDR;
#pragma	ioport	Autonomous_Toggle_DriveMode_2_ADDR:	0x7
BYTE			Autonomous_Toggle_DriveMode_2_ADDR;
#pragma	ioport	Autonomous_Toggle_GlobalSelect_ADDR:	0x6
BYTE			Autonomous_Toggle_GlobalSelect_ADDR;
#pragma	ioport	Autonomous_Toggle_IntCtrl_0_ADDR:	0x106
BYTE			Autonomous_Toggle_IntCtrl_0_ADDR;
#pragma	ioport	Autonomous_Toggle_IntCtrl_1_ADDR:	0x107
BYTE			Autonomous_Toggle_IntCtrl_1_ADDR;
#pragma	ioport	Autonomous_Toggle_IntEn_ADDR:	0x5
BYTE			Autonomous_Toggle_IntEn_ADDR;
#define Autonomous_Toggle_MASK 0x8
