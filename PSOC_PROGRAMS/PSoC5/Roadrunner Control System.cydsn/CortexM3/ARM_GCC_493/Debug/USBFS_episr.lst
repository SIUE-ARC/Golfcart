ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:.\Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  16:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  21:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  26:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  28:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  29:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  44:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  48:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  55:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0A4A     		ldr	r2, .L3
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 03F0FE03 		and	r3, r3, #254
  36 0008 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBFS_episr.c ****             
  57:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  37              		.loc 1 66 0
  38 000a 094B     		ldr	r3, .L3+4
  39 000c 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:.\Generated_Source\PSoC5/USBFS_episr.c ****             
  68:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000e 094B     		ldr	r3, .L3+8
  42 0010 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  43 0012 03F00303 		and	r3, r3, #3
  44 0016 012B     		cmp	r3, #1
  45 0018 04D0     		beq	.L2
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 3


  70:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  46              		.loc 1 71 0
  47 001a 064A     		ldr	r2, .L3+8
  48 001c D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  49 001e 83F08003 		eor	r3, r3, #128
  50 0022 D373     		strb	r3, [r2, #15]
  51              	.L2:
  72:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  74:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  52              		.loc 1 80 0
  53 0024 0122     		movs	r2, #1
  54 0026 034B     		ldr	r3, .L3+8
  55 0028 5A73     		strb	r2, [r3, #13]
  56 002a 7047     		bx	lr
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 002c 0B600040 		.word	1073766411
  61 0030 FC5F0040 		.word	1073766396
  62 0034 00000000 		.word	USBFS_EP
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  66              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  67              		.align	2
  68              		.global	USBFS_EP_2_ISR
  69              		.thumb
  70              		.thumb_func
  71              		.type	USBFS_EP_2_ISR, %function
  72              	USBFS_EP_2_ISR:
  73              	.LFB1:
  81:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  83:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  93:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  95:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  97:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 4


  99:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 101:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 104:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 108:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 109:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 111:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 112:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  74              		.loc 1 121 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
 122:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 126:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 137:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
  79              		.loc 1 137 0
  80 0000 0B4A     		ldr	r2, .L7
  81 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  82 0004 03F0FD03 		and	r3, r3, #253
  83 0008 1370     		strb	r3, [r2]
 138:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 139:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 5


 146:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
  84              		.loc 1 148 0
  85 000a 0A4B     		ldr	r3, .L7+4
  86 000c 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 150:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
  87              		.loc 1 151 0
  88 0010 094B     		ldr	r3, .L7+8
  89 0012 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  90 0014 03F00303 		and	r3, r3, #3
  91 0018 012B     		cmp	r3, #1
  92 001a 04D0     		beq	.L6
 152:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  93              		.loc 1 153 0
  94 001c 064A     		ldr	r2, .L7+8
  95 001e D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  96 0020 83F08003 		eor	r3, r3, #128
  97 0024 D376     		strb	r3, [r2, #27]
  98              	.L6:
 154:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 156:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  99              		.loc 1 162 0
 100 0026 0122     		movs	r2, #1
 101 0028 034B     		ldr	r3, .L7+8
 102 002a 5A76     		strb	r2, [r3, #25]
 103 002c 7047     		bx	lr
 104              	.L8:
 105 002e 00BF     		.align	2
 106              	.L7:
 107 0030 0B600040 		.word	1073766411
 108 0034 FC5F0040 		.word	1073766396
 109 0038 00000000 		.word	USBFS_EP
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
 113              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 114              		.align	2
 115              		.global	USBFS_BUS_RESET_ISR
 116              		.thumb
 117              		.thumb_func
 118              		.type	USBFS_BUS_RESET_ISR, %function
 119              	USBFS_BUS_RESET_ISR:
 120              	.LFB2:
 163:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 165:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 6


 166:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 175:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 179:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 183:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 186:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 192:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 193:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 207:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 209:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 211:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 218:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 220:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 7


 223:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 237:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 246:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 256:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 258:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 264:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 267:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 273:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 274:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 8


 280:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 292:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 299:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 301:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 312:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 318:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 9


 337:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 339:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 341:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 345:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 348:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 354:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 370:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 374:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 381:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 383:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 10


 394:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 400:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 409:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 421:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 423:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 427:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 430:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 437:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 11


 451:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 452:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 456:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 463:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 465:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 476:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 482:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 491:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 503:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 505:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 12


 508:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 512:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 518:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 534:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 536:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 538:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 547:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 558:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 564:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 13


 565:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 573:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 588:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 592:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 595:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 601:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 602:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 617:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 619:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 621:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 14


 622:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 628:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 630:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 641:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 647:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 656:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 666:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 668:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 670:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 674:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 677:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 15


 679:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 683:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 684:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 695:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 699:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 701:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 703:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 705:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 711:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 712:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 717:.\Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 720:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 721:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 121              		.loc 1 723 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 08B5     		push	{r3, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 3, -8
 128              		.cfi_offset 14, -4
 724:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 16


 728:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 730:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 732:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 734:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 129              		.loc 1 734 0
 130 0002 FFF7FEFF 		bl	USBFS_ReInitComponent
 131              	.LVL0:
 132 0006 08BD     		pop	{r3, pc}
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 136              		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 137              		.align	2
 138              		.global	USBFS_ARB_ISR
 139              		.thumb
 140              		.thumb_func
 141              		.type	USBFS_ARB_ISR, %function
 142              	USBFS_ARB_ISR:
 143              	.LFB3:
 735:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 736:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 740:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ACTIVE) */
 741:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 742:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 743:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_LPM_ACTIVE)
 744:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************
 745:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_INTR_LPM_ISR
 746:.\Generated_Source\PSoC5/USBFS_episr.c **** ************************************************************************//**
 747:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 748:.\Generated_Source\PSoC5/USBFS_episr.c **** *   Interrupt Service Routine for LPM of the interrupt sources.
 749:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 750:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 751:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************************************************/
 752:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_LPM_ISR)
 753:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 754:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_ENTRY_CALLBACK
 755:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_EntryCallback();
 756:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_ENTRY_CALLBACK) */
 757:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 758:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_BEGIN_USER_CODE` Place your code here */
 759:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 760:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 761:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 762:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_LPM_INTR);
 763:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 764:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START LPM_END_USER_CODE` Place your code here */
 765:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 766:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 767:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 768:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_LPM_ISR_EXIT_CALLBACK
 769:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_LPM_ISR_ExitCallback();
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 17


 770:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ISR_EXIT_CALLBACK) */
 771:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 772:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_LPM_ACTIVE) */
 773:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 774:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 775:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 776:.\Generated_Source\PSoC5/USBFS_episr.c ****     /***************************************************************************
 777:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 778:.\Generated_Source\PSoC5/USBFS_episr.c ****     ************************************************************************//**
 779:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 780:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine.
 781:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 782:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 783:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************/
 784:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 785:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 144              		.loc 1 785 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 70B4     		push	{r4, r5, r6}
 150              		.cfi_def_cfa_offset 12
 151              		.cfi_offset 4, -12
 152              		.cfi_offset 5, -8
 153              		.cfi_offset 6, -4
 154              	.LVL1:
 786:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 arbIntrStatus;
 787:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 epStatus;
 788:.\Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 789:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 790:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_ENTRY_CALLBACK
 791:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_EntryCallback();
 792:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_ENTRY_CALLBACK) */
 793:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 794:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 795:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 796:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 797:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 798:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Get pending ARB interrupt sources. */
 799:.\Generated_Source\PSoC5/USBFS_episr.c ****         arbIntrStatus = USBFS_ARB_INT_SR_REG;
 155              		.loc 1 799 0
 156 0002 234B     		ldr	r3, .L18
 157 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 158 0006 E4B2     		uxtb	r4, r4
 159              	.LVL2:
 788:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 160              		.loc 1 788 0
 161 0008 0123     		movs	r3, #1
 800:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 801:.\Generated_Source\PSoC5/USBFS_episr.c ****         while (0u != arbIntrStatus)
 162              		.loc 1 801 0
 163 000a 3CE0     		b	.L12
 164              	.LVL3:
 165              	.L16:
 802:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 803:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Check which EP is interrupt source. */
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 18


 804:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (0u != (arbIntrStatus & 0x01u))
 166              		.loc 1 804 0
 167 000c 14F0010F 		tst	r4, #1
 168 0010 36D0     		beq	.L13
 805:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 806:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Get endpoint enable interrupt sources. */
 807:.\Generated_Source\PSoC5/USBFS_episr.c ****                 epStatus = (USBFS_ARB_EP_BASE.arbEp[ep].epSr & USBFS_ARB_EP_BASE.arbEp[ep].epIntEn)
 169              		.loc 1 807 0
 170 0012 1A46     		mov	r2, r3
 171 0014 1901     		lsls	r1, r3, #4
 172 0016 1F48     		ldr	r0, .L18+4
 173 0018 0844     		add	r0, r0, r1
 174 001a 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
 175 001c 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 176 001e 0140     		ands	r1, r1, r0
 177              	.LVL4:
 808:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 809:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle IN endpoint buffer full event: happens only once when endpoint buffer is 
 810:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_IN_BUF_FULL))
 178              		.loc 1 810 0
 179 0020 11F0010F 		tst	r1, #1
 180 0024 17D0     		beq	.L14
 811:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 812:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_EP[ep].addr & USBFS_DIR_IN))
 181              		.loc 1 812 0
 182 0026 03EB4300 		add	r0, r3, r3, lsl #1
 183 002a 8000     		lsls	r0, r0, #2
 184 002c 1A4D     		ldr	r5, .L18+8
 185 002e 2844     		add	r0, r0, r5
 186 0030 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 187 0032 10F0800F 		tst	r0, #128
 188 0036 0ED0     		beq	.L14
 813:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 814:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear data ready status. */
 815:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_ARB_EP_BASE.arbEp[ep].epCfg &= (uint8) ~USBFS_ARB_EPX_CFG_IN_DATA_RDY
 189              		.loc 1 815 0
 190 0038 164D     		ldr	r5, .L18+4
 191 003a 1E01     		lsls	r6, r3, #4
 192 003c A85D     		ldrb	r0, [r5, r6]	@ zero_extendqisi2
 193 003e 00F0FE00 		and	r0, r0, #254
 194 0042 A855     		strb	r0, [r5, r6]
 816:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 817:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #if (CY_PSOC3 || CY_PSOC5LP)
 818:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 819:.\Generated_Source\PSoC5/USBFS_episr.c ****                             /* Set up common area DMA with rest of data. */
 820:.\Generated_Source\PSoC5/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 821:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {
 822:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 823:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 824:.\Generated_Source\PSoC5/USBFS_episr.c ****                             else
 825:.\Generated_Source\PSoC5/USBFS_episr.c ****                             {
 826:.\Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 827:.\Generated_Source\PSoC5/USBFS_episr.c ****                             }
 828:.\Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) *
 829:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 830:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 831:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Arm IN endpoint. */
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 19


 832:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_SIE_EP_BASE.sieEp[ep].epCr0 = USBFS_EP[ep].epMode;
 195              		.loc 1 832 0
 196 0044 03EB4300 		add	r0, r3, r3, lsl #1
 197 0048 8000     		lsls	r0, r0, #2
 198 004a 134D     		ldr	r5, .L18+8
 199 004c 2844     		add	r0, r0, r5
 200 004e 4579     		ldrb	r5, [r0, #5]	@ zero_extendqisi2
 201 0050 EDB2     		uxtb	r5, r5
 202 0052 1248     		ldr	r0, .L18+12
 203 0054 8555     		strb	r5, [r0, r6]
 204              	.L14:
 833:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 834:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 835:.\Generated_Source\PSoC5/USBFS_episr.c ****                         if (ep == USBFS_midi_in_ep)
 836:.\Generated_Source\PSoC5/USBFS_episr.c ****                         {
 837:.\Generated_Source\PSoC5/USBFS_episr.c ****                             /* Clear MIDI input pointer. */
 838:.\Generated_Source\PSoC5/USBFS_episr.c ****                             USBFS_midiInPointer = 0u;
 839:.\Generated_Source\PSoC5/USBFS_episr.c ****                         }
 840:.\Generated_Source\PSoC5/USBFS_episr.c ****                     #endif /* (USBFS_ENABLE_MIDI_STREAMING) */
 841:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 842:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 843:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 844:.\Generated_Source\PSoC5/USBFS_episr.c ****             #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
 845:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 846:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_SR_DMA_GNT))
 205              		.loc 1 846 0
 206 0056 11F0020F 		tst	r1, #2
 207 005a 0ED0     		beq	.L15
 847:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 848:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u == (USBFS_EP[ep].addr & USBFS_DIR_IN))
 208              		.loc 1 848 0
 209 005c 02EB4200 		add	r0, r2, r2, lsl #1
 210 0060 8000     		lsls	r0, r0, #2
 211 0062 0D4D     		ldr	r5, .L18+8
 212 0064 2844     		add	r0, r0, r5
 213 0066 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 214 0068 10F0800F 		tst	r0, #128
 215 006c 05D1     		bne	.L15
 849:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 850:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* Notify user that data has been copied from endpoint buffer. */
 851:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 216              		.loc 1 851 0
 217 006e 02EB4200 		add	r0, r2, r2, lsl #1
 218 0072 8000     		lsls	r0, r0, #2
 219 0074 2844     		add	r0, r0, r5
 220 0076 0025     		movs	r5, #0
 221 0078 4570     		strb	r5, [r0, #1]
 222              	.L15:
 852:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 853:.\Generated_Source\PSoC5/USBFS_episr.c ****                         /* DMA done coping data: OUT endpoint has to be re-armed by user. */
 854:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 855:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 856:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
 857:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 858:.\Generated_Source\PSoC5/USBFS_episr.c ****             #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 859:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Handle DMA completion event for OUT endpoints. */
 860:.\Generated_Source\PSoC5/USBFS_episr.c ****                 if (0u != (epStatus & USBFS_ARB_EPX_INT_DMA_TERMIN))
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 20


 861:.\Generated_Source\PSoC5/USBFS_episr.c ****                 {
 862:.\Generated_Source\PSoC5/USBFS_episr.c ****                     uint32 channelNum = USBFS_DmaChan[ep];
 863:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 864:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore burst counter for endpoint. */
 865:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_DmaEpBurstCnt[ep] = USBFS_DmaEpBurstCntBackup[ep];
 866:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 867:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Disable DMA channel to restore descriptor configuration. The on-going transf
 868:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChDisable(channelNum);
 869:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 870:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Generate DMA tr_out signal to notify USB IP that DMA is done. This signal is
 871:.\Generated_Source\PSoC5/USBFS_episr.c ****                     * when transfer was aborted (it occurs when host writes less bytes than buffer 
 872:.\Generated_Source\PSoC5/USBFS_episr.c ****                     */
 873:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaTriggerOut(USBFS_DmaBurstEndOut[ep]);
 874:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 875:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore destination address for output endpoint. */
 876:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
 877:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
 878:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                                                    
 879:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 880:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Restore number of data elements to transfer which was adjusted for last burs
 881:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (0u != (USBFS_DmaEpLastBurstEl[ep] & USBFS_DMA_DESCR_REVERT))
 882:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 883:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_CyDmaSetNumDataElements(channelNum, (USBFS_DmaEpLastBurstEl[ep] >> US
 884:.\Generated_Source\PSoC5/USBFS_episr.c ****                                                                              USBFS_DMA_GET_MAX_ELEM
 885:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 886:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 887:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Validate descriptor 0 and 1 (also reset current state). Command to start wit
 888:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
 889:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
 890:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
 891:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 892:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Enable DMA channel: configuration complete. */
 893:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_CyDmaChEnable(channelNum);
 894:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 895:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 896:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Read CR0 register to clear SIE lock. */
 897:.\Generated_Source\PSoC5/USBFS_episr.c ****                     (void) USBFS_SIE_EP_BASE.sieEp[ep].epCr0;
 898:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 899:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Toggle all endpoint types except ISOC. */
 900:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_GET_EP_TYPE(ep) != USBFS_EP_TYPE_ISOC)
 901:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 902:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_EP[ep].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 903:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 904:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 905:.\Generated_Source\PSoC5/USBFS_episr.c ****                     /* Notify user that data has been copied from endpoint buffer. */
 906:.\Generated_Source\PSoC5/USBFS_episr.c ****                     USBFS_EP[ep].apiEpState = USBFS_EVENT_PENDING;
 907:.\Generated_Source\PSoC5/USBFS_episr.c ****                     
 908:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 909:.\Generated_Source\PSoC5/USBFS_episr.c ****                     !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 910:.\Generated_Source\PSoC5/USBFS_episr.c ****                     if (USBFS_midi_out_ep == ep)
 911:.\Generated_Source\PSoC5/USBFS_episr.c ****                     {
 912:.\Generated_Source\PSoC5/USBFS_episr.c ****                         USBFS_MIDI_OUT_Service();
 913:.\Generated_Source\PSoC5/USBFS_episr.c ****                     }
 914:.\Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 915:.\Generated_Source\PSoC5/USBFS_episr.c ****                 }
 916:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 917:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 21


 918:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 919:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 920:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 921:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 922:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 923:.\Generated_Source\PSoC5/USBFS_episr.c ****             #ifdef USBFS_ARB_ISR_CALLBACK
 924:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_ISR_Callback(ep, epStatus);
 925:.\Generated_Source\PSoC5/USBFS_episr.c ****             #endif /* (USBFS_ARB_ISR_CALLBACK) */
 926:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 927:.\Generated_Source\PSoC5/USBFS_episr.c ****                 /* Clear serviced endpoint interrupt sources. */
 928:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_ARB_EP_BASE.arbEp[ep].epSr = epStatus;
 223              		.loc 1 928 0
 224 007a 1201     		lsls	r2, r2, #4
 225 007c 0848     		ldr	r0, .L18+16
 226 007e 8154     		strb	r1, [r0, r2]
 227              	.LVL5:
 228              	.L13:
 929:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 930:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 931:.\Generated_Source\PSoC5/USBFS_episr.c ****             ++ep;
 229              		.loc 1 931 0
 230 0080 0133     		adds	r3, r3, #1
 231              	.LVL6:
 232 0082 DBB2     		uxtb	r3, r3
 233              	.LVL7:
 932:.\Generated_Source\PSoC5/USBFS_episr.c ****             arbIntrStatus >>= 1u;
 234              		.loc 1 932 0
 235 0084 6408     		lsrs	r4, r4, #1
 236              	.LVL8:
 237              	.L12:
 801:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 238              		.loc 1 801 0
 239 0086 002C     		cmp	r4, #0
 240 0088 C0D1     		bne	.L16
 933:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 934:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 935:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 936:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 937:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 938:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 939:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_ARB_ISR_EXIT_CALLBACK
 940:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_ISR_ExitCallback();
 941:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_ARB_ISR_EXIT_CALLBACK) */
 942:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 241              		.loc 1 942 0
 242 008a 70BC     		pop	{r4, r5, r6}
 243              		.cfi_restore 6
 244              		.cfi_restore 5
 245              		.cfi_restore 4
 246              		.cfi_def_cfa_offset 0
 247              	.LVL9:
 248 008c 7047     		bx	lr
 249              	.L19:
 250 008e 00BF     		.align	2
 251              	.L18:
 252 0090 9F600040 		.word	1073766559
 253 0094 70600040 		.word	1073766512
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 22


 254 0098 00000000 		.word	USBFS_EP
 255 009c FE5F0040 		.word	1073766398
 256 00a0 72600040 		.word	1073766514
 257              		.cfi_endproc
 258              	.LFE3:
 259              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
 260              		.text
 261              	.Letext0:
 262              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 263              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 264              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_pvt.h"
 265              		.section	.debug_info,"",%progbits
 266              	.Ldebug_info0:
 267 0000 32030000 		.4byte	0x332
 268 0004 0400     		.2byte	0x4
 269 0006 00000000 		.4byte	.Ldebug_abbrev0
 270 000a 04       		.byte	0x4
 271 000b 01       		.uleb128 0x1
 272 000c 6E010000 		.4byte	.LASF50
 273 0010 01       		.byte	0x1
 274 0011 C3000000 		.4byte	.LASF51
 275 0015 4E020000 		.4byte	.LASF52
 276 0019 00000000 		.4byte	.Ldebug_ranges0+0
 277 001d 00000000 		.4byte	0
 278 0021 00000000 		.4byte	.Ldebug_line0
 279 0025 02       		.uleb128 0x2
 280 0026 01       		.byte	0x1
 281 0027 06       		.byte	0x6
 282 0028 34030000 		.4byte	.LASF0
 283 002c 02       		.uleb128 0x2
 284 002d 01       		.byte	0x1
 285 002e 08       		.byte	0x8
 286 002f B5000000 		.4byte	.LASF1
 287 0033 02       		.uleb128 0x2
 288 0034 02       		.byte	0x2
 289 0035 05       		.byte	0x5
 290 0036 FD020000 		.4byte	.LASF2
 291 003a 02       		.uleb128 0x2
 292 003b 02       		.byte	0x2
 293 003c 07       		.byte	0x7
 294 003d 4E000000 		.4byte	.LASF3
 295 0041 02       		.uleb128 0x2
 296 0042 04       		.byte	0x4
 297 0043 05       		.byte	0x5
 298 0044 1C030000 		.4byte	.LASF4
 299 0048 02       		.uleb128 0x2
 300 0049 04       		.byte	0x4
 301 004a 07       		.byte	0x7
 302 004b FA000000 		.4byte	.LASF5
 303 004f 02       		.uleb128 0x2
 304 0050 08       		.byte	0x8
 305 0051 05       		.byte	0x5
 306 0052 D6020000 		.4byte	.LASF6
 307 0056 02       		.uleb128 0x2
 308 0057 08       		.byte	0x8
 309 0058 07       		.byte	0x7
 310 0059 16020000 		.4byte	.LASF7
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 23


 311 005d 03       		.uleb128 0x3
 312 005e 04       		.byte	0x4
 313 005f 05       		.byte	0x5
 314 0060 696E7400 		.ascii	"int\000"
 315 0064 02       		.uleb128 0x2
 316 0065 04       		.byte	0x4
 317 0066 07       		.byte	0x7
 318 0067 01020000 		.4byte	.LASF8
 319 006b 04       		.uleb128 0x4
 320 006c 0C030000 		.4byte	.LASF9
 321 0070 02       		.byte	0x2
 322 0071 9201     		.2byte	0x192
 323 0073 2C000000 		.4byte	0x2c
 324 0077 04       		.uleb128 0x4
 325 0078 52010000 		.4byte	.LASF10
 326 007c 02       		.byte	0x2
 327 007d 9301     		.2byte	0x193
 328 007f 3A000000 		.4byte	0x3a
 329 0083 02       		.uleb128 0x2
 330 0084 04       		.byte	0x4
 331 0085 04       		.byte	0x4
 332 0086 2B000000 		.4byte	.LASF11
 333 008a 02       		.uleb128 0x2
 334 008b 08       		.byte	0x8
 335 008c 04       		.byte	0x4
 336 008d 24010000 		.4byte	.LASF12
 337 0091 02       		.uleb128 0x2
 338 0092 01       		.byte	0x1
 339 0093 08       		.byte	0x8
 340 0094 ED020000 		.4byte	.LASF13
 341 0098 04       		.uleb128 0x4
 342 0099 EA000000 		.4byte	.LASF14
 343 009d 02       		.byte	0x2
 344 009e 3C02     		.2byte	0x23c
 345 00a0 A4000000 		.4byte	0xa4
 346 00a4 05       		.uleb128 0x5
 347 00a5 6B000000 		.4byte	0x6b
 348 00a9 02       		.uleb128 0x2
 349 00aa 04       		.byte	0x4
 350 00ab 07       		.byte	0x7
 351 00ac E4020000 		.4byte	.LASF15
 352 00b0 06       		.uleb128 0x6
 353 00b1 0C       		.byte	0xc
 354 00b2 03       		.byte	0x3
 355 00b3 8D       		.byte	0x8d
 356 00b4 25010000 		.4byte	0x125
 357 00b8 07       		.uleb128 0x7
 358 00b9 C8020000 		.4byte	.LASF16
 359 00bd 03       		.byte	0x3
 360 00be 8F       		.byte	0x8f
 361 00bf 6B000000 		.4byte	0x6b
 362 00c3 00       		.byte	0
 363 00c4 07       		.uleb128 0x7
 364 00c5 EF000000 		.4byte	.LASF17
 365 00c9 03       		.byte	0x3
 366 00ca 90       		.byte	0x90
 367 00cb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 24


 368 00cf 01       		.byte	0x1
 369 00d0 07       		.uleb128 0x7
 370 00d1 2D020000 		.4byte	.LASF18
 371 00d5 03       		.byte	0x3
 372 00d6 91       		.byte	0x91
 373 00d7 6B000000 		.4byte	0x6b
 374 00db 02       		.byte	0x2
 375 00dc 07       		.uleb128 0x7
 376 00dd AC000000 		.4byte	.LASF19
 377 00e1 03       		.byte	0x3
 378 00e2 92       		.byte	0x92
 379 00e3 6B000000 		.4byte	0x6b
 380 00e7 03       		.byte	0x3
 381 00e8 07       		.uleb128 0x7
 382 00e9 0C010000 		.4byte	.LASF20
 383 00ed 03       		.byte	0x3
 384 00ee 93       		.byte	0x93
 385 00ef 6B000000 		.4byte	0x6b
 386 00f3 04       		.byte	0x4
 387 00f4 07       		.uleb128 0x7
 388 00f5 CF020000 		.4byte	.LASF21
 389 00f9 03       		.byte	0x3
 390 00fa 94       		.byte	0x94
 391 00fb 6B000000 		.4byte	0x6b
 392 00ff 05       		.byte	0x5
 393 0100 07       		.uleb128 0x7
 394 0101 3F010000 		.4byte	.LASF22
 395 0105 03       		.byte	0x3
 396 0106 95       		.byte	0x95
 397 0107 77000000 		.4byte	0x77
 398 010b 06       		.byte	0x6
 399 010c 07       		.uleb128 0x7
 400 010d F2020000 		.4byte	.LASF23
 401 0111 03       		.byte	0x3
 402 0112 96       		.byte	0x96
 403 0113 77000000 		.4byte	0x77
 404 0117 08       		.byte	0x8
 405 0118 07       		.uleb128 0x7
 406 0119 12030000 		.4byte	.LASF24
 407 011d 03       		.byte	0x3
 408 011e 97       		.byte	0x97
 409 011f 6B000000 		.4byte	0x6b
 410 0123 0A       		.byte	0xa
 411 0124 00       		.byte	0
 412 0125 08       		.uleb128 0x8
 413 0126 67000000 		.4byte	.LASF25
 414 012a 03       		.byte	0x3
 415 012b 98       		.byte	0x98
 416 012c B0000000 		.4byte	0xb0
 417 0130 06       		.uleb128 0x6
 418 0131 10       		.byte	0x10
 419 0132 03       		.byte	0x3
 420 0133 D4       		.byte	0xd4
 421 0134 69010000 		.4byte	0x169
 422 0138 07       		.uleb128 0x7
 423 0139 9E000000 		.4byte	.LASF26
 424 013d 03       		.byte	0x3
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 25


 425 013e D6       		.byte	0xd6
 426 013f 6B000000 		.4byte	0x6b
 427 0143 00       		.byte	0
 428 0144 07       		.uleb128 0x7
 429 0145 A5000000 		.4byte	.LASF27
 430 0149 03       		.byte	0x3
 431 014a D7       		.byte	0xd7
 432 014b 6B000000 		.4byte	0x6b
 433 014f 01       		.byte	0x1
 434 0150 07       		.uleb128 0x7
 435 0151 1C000000 		.4byte	.LASF28
 436 0155 03       		.byte	0x3
 437 0156 D8       		.byte	0xd8
 438 0157 6B000000 		.4byte	0x6b
 439 015b 02       		.byte	0x2
 440 015c 09       		.uleb128 0x9
 441 015d 67617000 		.ascii	"gap\000"
 442 0161 03       		.byte	0x3
 443 0162 D9       		.byte	0xd9
 444 0163 69010000 		.4byte	0x169
 445 0167 03       		.byte	0x3
 446 0168 00       		.byte	0
 447 0169 0A       		.uleb128 0xa
 448 016a 6B000000 		.4byte	0x6b
 449 016e 79010000 		.4byte	0x179
 450 0172 0B       		.uleb128 0xb
 451 0173 A9000000 		.4byte	0xa9
 452 0177 0C       		.byte	0xc
 453 0178 00       		.byte	0
 454 0179 08       		.uleb128 0x8
 455 017a 2B010000 		.4byte	.LASF29
 456 017e 03       		.byte	0x3
 457 017f DA       		.byte	0xda
 458 0180 30010000 		.4byte	0x130
 459 0184 06       		.uleb128 0x6
 460 0185 10       		.byte	0x10
 461 0186 03       		.byte	0x3
 462 0187 E6       		.byte	0xe6
 463 0188 05020000 		.4byte	0x205
 464 018c 07       		.uleb128 0x7
 465 018d 61000000 		.4byte	.LASF30
 466 0191 03       		.byte	0x3
 467 0192 E8       		.byte	0xe8
 468 0193 6B000000 		.4byte	0x6b
 469 0197 00       		.byte	0
 470 0198 07       		.uleb128 0x7
 471 0199 46020000 		.4byte	.LASF31
 472 019d 03       		.byte	0x3
 473 019e E9       		.byte	0xe9
 474 019f 6B000000 		.4byte	0x6b
 475 01a3 01       		.byte	0x1
 476 01a4 07       		.uleb128 0x7
 477 01a5 11010000 		.4byte	.LASF32
 478 01a9 03       		.byte	0x3
 479 01aa EA       		.byte	0xea
 480 01ab 6B000000 		.4byte	0x6b
 481 01af 02       		.byte	0x2
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 26


 482 01b0 07       		.uleb128 0x7
 483 01b1 31000000 		.4byte	.LASF33
 484 01b5 03       		.byte	0x3
 485 01b6 EB       		.byte	0xeb
 486 01b7 6B000000 		.4byte	0x6b
 487 01bb 03       		.byte	0x3
 488 01bc 07       		.uleb128 0x7
 489 01bd 1F010000 		.4byte	.LASF34
 490 01c1 03       		.byte	0x3
 491 01c2 EC       		.byte	0xec
 492 01c3 6B000000 		.4byte	0x6b
 493 01c7 04       		.byte	0x4
 494 01c8 07       		.uleb128 0x7
 495 01c9 4A010000 		.4byte	.LASF35
 496 01cd 03       		.byte	0x3
 497 01ce ED       		.byte	0xed
 498 01cf 6B000000 		.4byte	0x6b
 499 01d3 05       		.byte	0x5
 500 01d4 07       		.uleb128 0x7
 501 01d5 07030000 		.4byte	.LASF36
 502 01d9 03       		.byte	0x3
 503 01da EE       		.byte	0xee
 504 01db 6B000000 		.4byte	0x6b
 505 01df 06       		.byte	0x6
 506 01e0 07       		.uleb128 0x7
 507 01e1 0E020000 		.4byte	.LASF37
 508 01e5 03       		.byte	0x3
 509 01e6 EF       		.byte	0xef
 510 01e7 6B000000 		.4byte	0x6b
 511 01eb 07       		.byte	0x7
 512 01ec 07       		.uleb128 0x7
 513 01ed FC010000 		.4byte	.LASF38
 514 01f1 03       		.byte	0x3
 515 01f2 F0       		.byte	0xf0
 516 01f3 6B000000 		.4byte	0x6b
 517 01f7 08       		.byte	0x8
 518 01f8 09       		.uleb128 0x9
 519 01f9 67617000 		.ascii	"gap\000"
 520 01fd 03       		.byte	0x3
 521 01fe F1       		.byte	0xf1
 522 01ff 05020000 		.4byte	0x205
 523 0203 09       		.byte	0x9
 524 0204 00       		.byte	0
 525 0205 0A       		.uleb128 0xa
 526 0206 6B000000 		.4byte	0x6b
 527 020a 15020000 		.4byte	0x215
 528 020e 0B       		.uleb128 0xb
 529 020f A9000000 		.4byte	0xa9
 530 0213 06       		.byte	0x6
 531 0214 00       		.byte	0
 532 0215 08       		.uleb128 0x8
 533 0216 3A000000 		.4byte	.LASF39
 534 021a 03       		.byte	0x3
 535 021b F2       		.byte	0xf2
 536 021c 84010000 		.4byte	0x184
 537 0220 0C       		.uleb128 0xc
 538 0221 90       		.byte	0x90
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 27


 539 0222 03       		.byte	0x3
 540 0223 0E01     		.2byte	0x10e
 541 0225 37020000 		.4byte	0x237
 542 0229 0D       		.uleb128 0xd
 543 022a 4E030000 		.4byte	.LASF40
 544 022e 03       		.byte	0x3
 545 022f 1001     		.2byte	0x110
 546 0231 37020000 		.4byte	0x237
 547 0235 00       		.byte	0
 548 0236 00       		.byte	0
 549 0237 0A       		.uleb128 0xa
 550 0238 79010000 		.4byte	0x179
 551 023c 47020000 		.4byte	0x247
 552 0240 0B       		.uleb128 0xb
 553 0241 A9000000 		.4byte	0xa9
 554 0245 08       		.byte	0x8
 555 0246 00       		.byte	0
 556 0247 04       		.uleb128 0x4
 557 0248 59010000 		.4byte	.LASF41
 558 024c 03       		.byte	0x3
 559 024d 1101     		.2byte	0x111
 560 024f 20020000 		.4byte	0x220
 561 0253 0C       		.uleb128 0xc
 562 0254 90       		.byte	0x90
 563 0255 03       		.byte	0x3
 564 0256 1401     		.2byte	0x114
 565 0258 6A020000 		.4byte	0x26a
 566 025c 0D       		.uleb128 0xd
 567 025d 00000000 		.4byte	.LASF42
 568 0261 03       		.byte	0x3
 569 0262 1601     		.2byte	0x116
 570 0264 6A020000 		.4byte	0x26a
 571 0268 00       		.byte	0
 572 0269 00       		.byte	0
 573 026a 0A       		.uleb128 0xa
 574 026b 15020000 		.4byte	0x215
 575 026f 7A020000 		.4byte	0x27a
 576 0273 0B       		.uleb128 0xb
 577 0274 A9000000 		.4byte	0xa9
 578 0278 08       		.byte	0x8
 579 0279 00       		.byte	0
 580 027a 04       		.uleb128 0x4
 581 027b B3020000 		.4byte	.LASF43
 582 027f 03       		.byte	0x3
 583 0280 1701     		.2byte	0x117
 584 0282 53020000 		.4byte	0x253
 585 0286 0E       		.uleb128 0xe
 586 0287 37020000 		.4byte	.LASF44
 587 028b 01       		.byte	0x1
 588 028c 25       		.byte	0x25
 589 028d 00000000 		.4byte	.LFB0
 590 0291 38000000 		.4byte	.LFE0-.LFB0
 591 0295 01       		.uleb128 0x1
 592 0296 9C       		.byte	0x9c
 593 0297 0E       		.uleb128 0xe
 594 0298 25030000 		.4byte	.LASF45
 595 029c 01       		.byte	0x1
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 28


 596 029d 78       		.byte	0x78
 597 029e 00000000 		.4byte	.LFB1
 598 02a2 3C000000 		.4byte	.LFE1-.LFB1
 599 02a6 01       		.uleb128 0x1
 600 02a7 9C       		.byte	0x9c
 601 02a8 0F       		.uleb128 0xf
 602 02a9 7C000000 		.4byte	.LASF46
 603 02ad 01       		.byte	0x1
 604 02ae D202     		.2byte	0x2d2
 605 02b0 00000000 		.4byte	.LFB2
 606 02b4 08000000 		.4byte	.LFE2-.LFB2
 607 02b8 01       		.uleb128 0x1
 608 02b9 9C       		.byte	0x9c
 609 02ba C8020000 		.4byte	0x2c8
 610 02be 10       		.uleb128 0x10
 611 02bf 06000000 		.4byte	.LVL0
 612 02c3 2E030000 		.4byte	0x32e
 613 02c7 00       		.byte	0
 614 02c8 0F       		.uleb128 0xf
 615 02c9 40030000 		.4byte	.LASF47
 616 02cd 01       		.byte	0x1
 617 02ce 1003     		.2byte	0x310
 618 02d0 00000000 		.4byte	.LFB3
 619 02d4 A4000000 		.4byte	.LFE3-.LFB3
 620 02d8 01       		.uleb128 0x1
 621 02d9 9C       		.byte	0x9c
 622 02da 0E030000 		.4byte	0x30e
 623 02de 11       		.uleb128 0x11
 624 02df 90000000 		.4byte	.LASF48
 625 02e3 01       		.byte	0x1
 626 02e4 1203     		.2byte	0x312
 627 02e6 6B000000 		.4byte	0x6b
 628 02ea 00000000 		.4byte	.LLST0
 629 02ee 11       		.uleb128 0x11
 630 02ef 22000000 		.4byte	.LASF49
 631 02f3 01       		.byte	0x1
 632 02f4 1303     		.2byte	0x313
 633 02f6 6B000000 		.4byte	0x6b
 634 02fa 13000000 		.4byte	.LLST1
 635 02fe 12       		.uleb128 0x12
 636 02ff 657000   		.ascii	"ep\000"
 637 0302 01       		.byte	0x1
 638 0303 1403     		.2byte	0x314
 639 0305 6B000000 		.4byte	0x6b
 640 0309 26000000 		.4byte	.LLST2
 641 030d 00       		.byte	0
 642 030e 0A       		.uleb128 0xa
 643 030f 25010000 		.4byte	0x125
 644 0313 1E030000 		.4byte	0x31e
 645 0317 0B       		.uleb128 0xb
 646 0318 A9000000 		.4byte	0xa9
 647 031c 08       		.byte	0x8
 648 031d 00       		.byte	0
 649 031e 13       		.uleb128 0x13
 650 031f 16010000 		.4byte	.LASF53
 651 0323 04       		.byte	0x4
 652 0324 79       		.byte	0x79
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 29


 653 0325 29030000 		.4byte	0x329
 654 0329 05       		.uleb128 0x5
 655 032a 0E030000 		.4byte	0x30e
 656 032e 14       		.uleb128 0x14
 657 032f 06000000 		.4byte	.LASF54
 658 0333 04       		.byte	0x4
 659 0334 A4       		.byte	0xa4
 660 0335 00       		.byte	0
 661              		.section	.debug_abbrev,"",%progbits
 662              	.Ldebug_abbrev0:
 663 0000 01       		.uleb128 0x1
 664 0001 11       		.uleb128 0x11
 665 0002 01       		.byte	0x1
 666 0003 25       		.uleb128 0x25
 667 0004 0E       		.uleb128 0xe
 668 0005 13       		.uleb128 0x13
 669 0006 0B       		.uleb128 0xb
 670 0007 03       		.uleb128 0x3
 671 0008 0E       		.uleb128 0xe
 672 0009 1B       		.uleb128 0x1b
 673 000a 0E       		.uleb128 0xe
 674 000b 55       		.uleb128 0x55
 675 000c 17       		.uleb128 0x17
 676 000d 11       		.uleb128 0x11
 677 000e 01       		.uleb128 0x1
 678 000f 10       		.uleb128 0x10
 679 0010 17       		.uleb128 0x17
 680 0011 00       		.byte	0
 681 0012 00       		.byte	0
 682 0013 02       		.uleb128 0x2
 683 0014 24       		.uleb128 0x24
 684 0015 00       		.byte	0
 685 0016 0B       		.uleb128 0xb
 686 0017 0B       		.uleb128 0xb
 687 0018 3E       		.uleb128 0x3e
 688 0019 0B       		.uleb128 0xb
 689 001a 03       		.uleb128 0x3
 690 001b 0E       		.uleb128 0xe
 691 001c 00       		.byte	0
 692 001d 00       		.byte	0
 693 001e 03       		.uleb128 0x3
 694 001f 24       		.uleb128 0x24
 695 0020 00       		.byte	0
 696 0021 0B       		.uleb128 0xb
 697 0022 0B       		.uleb128 0xb
 698 0023 3E       		.uleb128 0x3e
 699 0024 0B       		.uleb128 0xb
 700 0025 03       		.uleb128 0x3
 701 0026 08       		.uleb128 0x8
 702 0027 00       		.byte	0
 703 0028 00       		.byte	0
 704 0029 04       		.uleb128 0x4
 705 002a 16       		.uleb128 0x16
 706 002b 00       		.byte	0
 707 002c 03       		.uleb128 0x3
 708 002d 0E       		.uleb128 0xe
 709 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 30


 710 002f 0B       		.uleb128 0xb
 711 0030 3B       		.uleb128 0x3b
 712 0031 05       		.uleb128 0x5
 713 0032 49       		.uleb128 0x49
 714 0033 13       		.uleb128 0x13
 715 0034 00       		.byte	0
 716 0035 00       		.byte	0
 717 0036 05       		.uleb128 0x5
 718 0037 35       		.uleb128 0x35
 719 0038 00       		.byte	0
 720 0039 49       		.uleb128 0x49
 721 003a 13       		.uleb128 0x13
 722 003b 00       		.byte	0
 723 003c 00       		.byte	0
 724 003d 06       		.uleb128 0x6
 725 003e 13       		.uleb128 0x13
 726 003f 01       		.byte	0x1
 727 0040 0B       		.uleb128 0xb
 728 0041 0B       		.uleb128 0xb
 729 0042 3A       		.uleb128 0x3a
 730 0043 0B       		.uleb128 0xb
 731 0044 3B       		.uleb128 0x3b
 732 0045 0B       		.uleb128 0xb
 733 0046 01       		.uleb128 0x1
 734 0047 13       		.uleb128 0x13
 735 0048 00       		.byte	0
 736 0049 00       		.byte	0
 737 004a 07       		.uleb128 0x7
 738 004b 0D       		.uleb128 0xd
 739 004c 00       		.byte	0
 740 004d 03       		.uleb128 0x3
 741 004e 0E       		.uleb128 0xe
 742 004f 3A       		.uleb128 0x3a
 743 0050 0B       		.uleb128 0xb
 744 0051 3B       		.uleb128 0x3b
 745 0052 0B       		.uleb128 0xb
 746 0053 49       		.uleb128 0x49
 747 0054 13       		.uleb128 0x13
 748 0055 38       		.uleb128 0x38
 749 0056 0B       		.uleb128 0xb
 750 0057 00       		.byte	0
 751 0058 00       		.byte	0
 752 0059 08       		.uleb128 0x8
 753 005a 16       		.uleb128 0x16
 754 005b 00       		.byte	0
 755 005c 03       		.uleb128 0x3
 756 005d 0E       		.uleb128 0xe
 757 005e 3A       		.uleb128 0x3a
 758 005f 0B       		.uleb128 0xb
 759 0060 3B       		.uleb128 0x3b
 760 0061 0B       		.uleb128 0xb
 761 0062 49       		.uleb128 0x49
 762 0063 13       		.uleb128 0x13
 763 0064 00       		.byte	0
 764 0065 00       		.byte	0
 765 0066 09       		.uleb128 0x9
 766 0067 0D       		.uleb128 0xd
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 31


 767 0068 00       		.byte	0
 768 0069 03       		.uleb128 0x3
 769 006a 08       		.uleb128 0x8
 770 006b 3A       		.uleb128 0x3a
 771 006c 0B       		.uleb128 0xb
 772 006d 3B       		.uleb128 0x3b
 773 006e 0B       		.uleb128 0xb
 774 006f 49       		.uleb128 0x49
 775 0070 13       		.uleb128 0x13
 776 0071 38       		.uleb128 0x38
 777 0072 0B       		.uleb128 0xb
 778 0073 00       		.byte	0
 779 0074 00       		.byte	0
 780 0075 0A       		.uleb128 0xa
 781 0076 01       		.uleb128 0x1
 782 0077 01       		.byte	0x1
 783 0078 49       		.uleb128 0x49
 784 0079 13       		.uleb128 0x13
 785 007a 01       		.uleb128 0x1
 786 007b 13       		.uleb128 0x13
 787 007c 00       		.byte	0
 788 007d 00       		.byte	0
 789 007e 0B       		.uleb128 0xb
 790 007f 21       		.uleb128 0x21
 791 0080 00       		.byte	0
 792 0081 49       		.uleb128 0x49
 793 0082 13       		.uleb128 0x13
 794 0083 2F       		.uleb128 0x2f
 795 0084 0B       		.uleb128 0xb
 796 0085 00       		.byte	0
 797 0086 00       		.byte	0
 798 0087 0C       		.uleb128 0xc
 799 0088 13       		.uleb128 0x13
 800 0089 01       		.byte	0x1
 801 008a 0B       		.uleb128 0xb
 802 008b 0B       		.uleb128 0xb
 803 008c 3A       		.uleb128 0x3a
 804 008d 0B       		.uleb128 0xb
 805 008e 3B       		.uleb128 0x3b
 806 008f 05       		.uleb128 0x5
 807 0090 01       		.uleb128 0x1
 808 0091 13       		.uleb128 0x13
 809 0092 00       		.byte	0
 810 0093 00       		.byte	0
 811 0094 0D       		.uleb128 0xd
 812 0095 0D       		.uleb128 0xd
 813 0096 00       		.byte	0
 814 0097 03       		.uleb128 0x3
 815 0098 0E       		.uleb128 0xe
 816 0099 3A       		.uleb128 0x3a
 817 009a 0B       		.uleb128 0xb
 818 009b 3B       		.uleb128 0x3b
 819 009c 05       		.uleb128 0x5
 820 009d 49       		.uleb128 0x49
 821 009e 13       		.uleb128 0x13
 822 009f 38       		.uleb128 0x38
 823 00a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 32


 824 00a1 00       		.byte	0
 825 00a2 00       		.byte	0
 826 00a3 0E       		.uleb128 0xe
 827 00a4 2E       		.uleb128 0x2e
 828 00a5 00       		.byte	0
 829 00a6 3F       		.uleb128 0x3f
 830 00a7 19       		.uleb128 0x19
 831 00a8 03       		.uleb128 0x3
 832 00a9 0E       		.uleb128 0xe
 833 00aa 3A       		.uleb128 0x3a
 834 00ab 0B       		.uleb128 0xb
 835 00ac 3B       		.uleb128 0x3b
 836 00ad 0B       		.uleb128 0xb
 837 00ae 27       		.uleb128 0x27
 838 00af 19       		.uleb128 0x19
 839 00b0 11       		.uleb128 0x11
 840 00b1 01       		.uleb128 0x1
 841 00b2 12       		.uleb128 0x12
 842 00b3 06       		.uleb128 0x6
 843 00b4 40       		.uleb128 0x40
 844 00b5 18       		.uleb128 0x18
 845 00b6 9742     		.uleb128 0x2117
 846 00b8 19       		.uleb128 0x19
 847 00b9 00       		.byte	0
 848 00ba 00       		.byte	0
 849 00bb 0F       		.uleb128 0xf
 850 00bc 2E       		.uleb128 0x2e
 851 00bd 01       		.byte	0x1
 852 00be 3F       		.uleb128 0x3f
 853 00bf 19       		.uleb128 0x19
 854 00c0 03       		.uleb128 0x3
 855 00c1 0E       		.uleb128 0xe
 856 00c2 3A       		.uleb128 0x3a
 857 00c3 0B       		.uleb128 0xb
 858 00c4 3B       		.uleb128 0x3b
 859 00c5 05       		.uleb128 0x5
 860 00c6 27       		.uleb128 0x27
 861 00c7 19       		.uleb128 0x19
 862 00c8 11       		.uleb128 0x11
 863 00c9 01       		.uleb128 0x1
 864 00ca 12       		.uleb128 0x12
 865 00cb 06       		.uleb128 0x6
 866 00cc 40       		.uleb128 0x40
 867 00cd 18       		.uleb128 0x18
 868 00ce 9742     		.uleb128 0x2117
 869 00d0 19       		.uleb128 0x19
 870 00d1 01       		.uleb128 0x1
 871 00d2 13       		.uleb128 0x13
 872 00d3 00       		.byte	0
 873 00d4 00       		.byte	0
 874 00d5 10       		.uleb128 0x10
 875 00d6 898201   		.uleb128 0x4109
 876 00d9 00       		.byte	0
 877 00da 11       		.uleb128 0x11
 878 00db 01       		.uleb128 0x1
 879 00dc 31       		.uleb128 0x31
 880 00dd 13       		.uleb128 0x13
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 33


 881 00de 00       		.byte	0
 882 00df 00       		.byte	0
 883 00e0 11       		.uleb128 0x11
 884 00e1 34       		.uleb128 0x34
 885 00e2 00       		.byte	0
 886 00e3 03       		.uleb128 0x3
 887 00e4 0E       		.uleb128 0xe
 888 00e5 3A       		.uleb128 0x3a
 889 00e6 0B       		.uleb128 0xb
 890 00e7 3B       		.uleb128 0x3b
 891 00e8 05       		.uleb128 0x5
 892 00e9 49       		.uleb128 0x49
 893 00ea 13       		.uleb128 0x13
 894 00eb 02       		.uleb128 0x2
 895 00ec 17       		.uleb128 0x17
 896 00ed 00       		.byte	0
 897 00ee 00       		.byte	0
 898 00ef 12       		.uleb128 0x12
 899 00f0 34       		.uleb128 0x34
 900 00f1 00       		.byte	0
 901 00f2 03       		.uleb128 0x3
 902 00f3 08       		.uleb128 0x8
 903 00f4 3A       		.uleb128 0x3a
 904 00f5 0B       		.uleb128 0xb
 905 00f6 3B       		.uleb128 0x3b
 906 00f7 05       		.uleb128 0x5
 907 00f8 49       		.uleb128 0x49
 908 00f9 13       		.uleb128 0x13
 909 00fa 02       		.uleb128 0x2
 910 00fb 17       		.uleb128 0x17
 911 00fc 00       		.byte	0
 912 00fd 00       		.byte	0
 913 00fe 13       		.uleb128 0x13
 914 00ff 34       		.uleb128 0x34
 915 0100 00       		.byte	0
 916 0101 03       		.uleb128 0x3
 917 0102 0E       		.uleb128 0xe
 918 0103 3A       		.uleb128 0x3a
 919 0104 0B       		.uleb128 0xb
 920 0105 3B       		.uleb128 0x3b
 921 0106 0B       		.uleb128 0xb
 922 0107 49       		.uleb128 0x49
 923 0108 13       		.uleb128 0x13
 924 0109 3F       		.uleb128 0x3f
 925 010a 19       		.uleb128 0x19
 926 010b 3C       		.uleb128 0x3c
 927 010c 19       		.uleb128 0x19
 928 010d 00       		.byte	0
 929 010e 00       		.byte	0
 930 010f 14       		.uleb128 0x14
 931 0110 2E       		.uleb128 0x2e
 932 0111 00       		.byte	0
 933 0112 3F       		.uleb128 0x3f
 934 0113 19       		.uleb128 0x19
 935 0114 03       		.uleb128 0x3
 936 0115 0E       		.uleb128 0xe
 937 0116 3A       		.uleb128 0x3a
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 34


 938 0117 0B       		.uleb128 0xb
 939 0118 3B       		.uleb128 0x3b
 940 0119 0B       		.uleb128 0xb
 941 011a 27       		.uleb128 0x27
 942 011b 19       		.uleb128 0x19
 943 011c 3C       		.uleb128 0x3c
 944 011d 19       		.uleb128 0x19
 945 011e 00       		.byte	0
 946 011f 00       		.byte	0
 947 0120 00       		.byte	0
 948              		.section	.debug_loc,"",%progbits
 949              	.Ldebug_loc0:
 950              	.LLST0:
 951 0000 08000000 		.4byte	.LVL2
 952 0004 8C000000 		.4byte	.LVL9
 953 0008 0100     		.2byte	0x1
 954 000a 54       		.byte	0x54
 955 000b 00000000 		.4byte	0
 956 000f 00000000 		.4byte	0
 957              	.LLST1:
 958 0013 20000000 		.4byte	.LVL4
 959 0017 80000000 		.4byte	.LVL5
 960 001b 0100     		.2byte	0x1
 961 001d 51       		.byte	0x51
 962 001e 00000000 		.4byte	0
 963 0022 00000000 		.4byte	0
 964              	.LLST2:
 965 0026 02000000 		.4byte	.LVL1
 966 002a 0C000000 		.4byte	.LVL3
 967 002e 0200     		.2byte	0x2
 968 0030 31       		.byte	0x31
 969 0031 9F       		.byte	0x9f
 970 0032 0C000000 		.4byte	.LVL3
 971 0036 82000000 		.4byte	.LVL6
 972 003a 0100     		.2byte	0x1
 973 003c 53       		.byte	0x53
 974 003d 84000000 		.4byte	.LVL7
 975 0041 A4000000 		.4byte	.LFE3
 976 0045 0100     		.2byte	0x1
 977 0047 53       		.byte	0x53
 978 0048 00000000 		.4byte	0
 979 004c 00000000 		.4byte	0
 980              		.section	.debug_aranges,"",%progbits
 981 0000 34000000 		.4byte	0x34
 982 0004 0200     		.2byte	0x2
 983 0006 00000000 		.4byte	.Ldebug_info0
 984 000a 04       		.byte	0x4
 985 000b 00       		.byte	0
 986 000c 0000     		.2byte	0
 987 000e 0000     		.2byte	0
 988 0010 00000000 		.4byte	.LFB0
 989 0014 38000000 		.4byte	.LFE0-.LFB0
 990 0018 00000000 		.4byte	.LFB1
 991 001c 3C000000 		.4byte	.LFE1-.LFB1
 992 0020 00000000 		.4byte	.LFB2
 993 0024 08000000 		.4byte	.LFE2-.LFB2
 994 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 35


 995 002c A4000000 		.4byte	.LFE3-.LFB3
 996 0030 00000000 		.4byte	0
 997 0034 00000000 		.4byte	0
 998              		.section	.debug_ranges,"",%progbits
 999              	.Ldebug_ranges0:
 1000 0000 00000000 		.4byte	.LFB0
 1001 0004 38000000 		.4byte	.LFE0
 1002 0008 00000000 		.4byte	.LFB1
 1003 000c 3C000000 		.4byte	.LFE1
 1004 0010 00000000 		.4byte	.LFB2
 1005 0014 08000000 		.4byte	.LFE2
 1006 0018 00000000 		.4byte	.LFB3
 1007 001c A4000000 		.4byte	.LFE3
 1008 0020 00000000 		.4byte	0
 1009 0024 00000000 		.4byte	0
 1010              		.section	.debug_line,"",%progbits
 1011              	.Ldebug_line0:
 1012 0000 E6000000 		.section	.debug_str,"MS",%progbits,1
 1012      02006400 
 1012      00000201 
 1012      FB0E0D00 
 1012      01010101 
 1013              	.LASF42:
 1014 0000 61726245 		.ascii	"arbEp\000"
 1014      7000
 1015              	.LASF54:
 1016 0006 55534246 		.ascii	"USBFS_ReInitComponent\000"
 1016      535F5265 
 1016      496E6974 
 1016      436F6D70 
 1016      6F6E656E 
 1017              	.LASF28:
 1018 001c 65704372 		.ascii	"epCr0\000"
 1018      3000
 1019              	.LASF49:
 1020 0022 65705374 		.ascii	"epStatus\000"
 1020      61747573 
 1020      00
 1021              	.LASF11:
 1022 002b 666C6F61 		.ascii	"float\000"
 1022      7400
 1023              	.LASF33:
 1024 0031 72657365 		.ascii	"reserved\000"
 1024      72766564 
 1024      00
 1025              	.LASF39:
 1026 003a 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 1026      535F6172 
 1026      625F6570 
 1026      5F737472 
 1026      75637400 
 1027              	.LASF3:
 1028 004e 73686F72 		.ascii	"short unsigned int\000"
 1028      7420756E 
 1028      7369676E 
 1028      65642069 
 1028      6E7400
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 36


 1029              	.LASF30:
 1030 0061 65704366 		.ascii	"epCfg\000"
 1030      6700
 1031              	.LASF25:
 1032 0067 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 1032      4246535F 
 1032      45505F43 
 1032      544C5F42 
 1032      4C4F434B 
 1033              	.LASF46:
 1034 007c 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 1034      535F4255 
 1034      535F5245 
 1034      5345545F 
 1034      49535200 
 1035              	.LASF48:
 1036 0090 61726249 		.ascii	"arbIntrStatus\000"
 1036      6E747253 
 1036      74617475 
 1036      7300
 1037              	.LASF26:
 1038 009e 6570436E 		.ascii	"epCnt0\000"
 1038      743000
 1039              	.LASF27:
 1040 00a5 6570436E 		.ascii	"epCnt1\000"
 1040      743100
 1041              	.LASF19:
 1042 00ac 6570546F 		.ascii	"epToggle\000"
 1042      67676C65 
 1042      00
 1043              	.LASF1:
 1044 00b5 756E7369 		.ascii	"unsigned char\000"
 1044      676E6564 
 1044      20636861 
 1044      7200
 1045              	.LASF51:
 1046 00c3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_episr.c\000"
 1046      6E657261 
 1046      7465645F 
 1046      536F7572 
 1046      63655C50 
 1047              	.LASF14:
 1048 00ea 72656738 		.ascii	"reg8\000"
 1048      00
 1049              	.LASF17:
 1050 00ef 61706945 		.ascii	"apiEpState\000"
 1050      70537461 
 1050      746500
 1051              	.LASF5:
 1052 00fa 6C6F6E67 		.ascii	"long unsigned int\000"
 1052      20756E73 
 1052      69676E65 
 1052      6420696E 
 1052      7400
 1053              	.LASF20:
 1054 010c 61646472 		.ascii	"addr\000"
 1054      00
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 37


 1055              	.LASF32:
 1056 0111 65705372 		.ascii	"epSr\000"
 1056      00
 1057              	.LASF53:
 1058 0116 55534246 		.ascii	"USBFS_EP\000"
 1058      535F4550 
 1058      00
 1059              	.LASF34:
 1060 011f 72775761 		.ascii	"rwWa\000"
 1060      00
 1061              	.LASF12:
 1062 0124 646F7562 		.ascii	"double\000"
 1062      6C6500
 1063              	.LASF29:
 1064 012b 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 1064      535F7369 
 1064      655F6570 
 1064      5F737472 
 1064      75637400 
 1065              	.LASF22:
 1066 013f 62756666 		.ascii	"buffOffset\000"
 1066      4F666673 
 1066      657400
 1067              	.LASF35:
 1068 014a 72775761 		.ascii	"rwWaMsb\000"
 1068      4D736200 
 1069              	.LASF10:
 1070 0152 75696E74 		.ascii	"uint16\000"
 1070      313600
 1071              	.LASF41:
 1072 0159 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 1072      535F7369 
 1072      655F6570 
 1072      735F7374 
 1072      72756374 
 1073              	.LASF50:
 1074 016e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1074      4320342E 
 1074      392E3320 
 1074      32303135 
 1074      30333033 
 1075 01a1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1075      20726576 
 1075      6973696F 
 1075      6E203232 
 1075      31323230 
 1076 01d4 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1076      66756E63 
 1076      74696F6E 
 1076      2D736563 
 1076      74696F6E 
 1077              	.LASF38:
 1078 01fc 72774472 		.ascii	"rwDr\000"
 1078      00
 1079              	.LASF8:
 1080 0201 756E7369 		.ascii	"unsigned int\000"
 1080      676E6564 
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 38


 1080      20696E74 
 1080      00
 1081              	.LASF37:
 1082 020e 72775261 		.ascii	"rwRaMsb\000"
 1082      4D736200 
 1083              	.LASF7:
 1084 0216 6C6F6E67 		.ascii	"long long unsigned int\000"
 1084      206C6F6E 
 1084      6720756E 
 1084      7369676E 
 1084      65642069 
 1085              	.LASF18:
 1086 022d 68774570 		.ascii	"hwEpState\000"
 1086      53746174 
 1086      6500
 1087              	.LASF44:
 1088 0237 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 1088      535F4550 
 1088      5F315F49 
 1088      535200
 1089              	.LASF31:
 1090 0246 6570496E 		.ascii	"epIntEn\000"
 1090      74456E00 
 1091              	.LASF52:
 1092 024e 433A5C55 		.ascii	"C:\\Users\\Bryan Orabutt\\Documents\\GitHub\\Golfca"
 1092      73657273 
 1092      5C427279 
 1092      616E204F 
 1092      72616275 
 1093 027c 72745C50 		.ascii	"rt\\PSOC_PROGRAMS\\PSoC5\\Roadrunner Control System"
 1093      534F435F 
 1093      50524F47 
 1093      52414D53 
 1093      5C50536F 
 1094 02ac 2E637964 		.ascii	".cydsn\000"
 1094      736E00
 1095              	.LASF43:
 1096 02b3 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 1096      535F6172 
 1096      625F6570 
 1096      735F7374 
 1096      72756374 
 1097              	.LASF16:
 1098 02c8 61747472 		.ascii	"attrib\000"
 1098      696200
 1099              	.LASF21:
 1100 02cf 65704D6F 		.ascii	"epMode\000"
 1100      646500
 1101              	.LASF6:
 1102 02d6 6C6F6E67 		.ascii	"long long int\000"
 1102      206C6F6E 
 1102      6720696E 
 1102      7400
 1103              	.LASF15:
 1104 02e4 73697A65 		.ascii	"sizetype\000"
 1104      74797065 
 1104      00
ARM GAS  C:\Users\BRYANO~1\AppData\Local\Temp\cc0xwdyd.s 			page 39


 1105              	.LASF13:
 1106 02ed 63686172 		.ascii	"char\000"
 1106      00
 1107              	.LASF23:
 1108 02f2 62756666 		.ascii	"bufferSize\000"
 1108      65725369 
 1108      7A6500
 1109              	.LASF2:
 1110 02fd 73686F72 		.ascii	"short int\000"
 1110      7420696E 
 1110      7400
 1111              	.LASF36:
 1112 0307 72775261 		.ascii	"rwRa\000"
 1112      00
 1113              	.LASF9:
 1114 030c 75696E74 		.ascii	"uint8\000"
 1114      3800
 1115              	.LASF24:
 1116 0312 696E7465 		.ascii	"interface\000"
 1116      72666163 
 1116      6500
 1117              	.LASF4:
 1118 031c 6C6F6E67 		.ascii	"long int\000"
 1118      20696E74 
 1118      00
 1119              	.LASF45:
 1120 0325 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 1120      535F4550 
 1120      5F325F49 
 1120      535200
 1121              	.LASF0:
 1122 0334 7369676E 		.ascii	"signed char\000"
 1122      65642063 
 1122      68617200 
 1123              	.LASF47:
 1124 0340 55534246 		.ascii	"USBFS_ARB_ISR\000"
 1124      535F4152 
 1124      425F4953 
 1124      5200
 1125              	.LASF40:
 1126 034e 73696545 		.ascii	"sieEp\000"
 1126      7000
 1127              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
